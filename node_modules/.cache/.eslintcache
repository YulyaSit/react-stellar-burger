[{"D:\\реакт\\react-stellar-burger\\src\\index.jsx":"1","D:\\реакт\\react-stellar-burger\\src\\reportWebVitals.ts":"2","D:\\реакт\\react-stellar-burger\\src\\components\\app\\app.jsx":"3","D:\\реакт\\react-stellar-burger\\src\\components\\AppHeader\\AppHeader.jsx":"4","D:\\реакт\\react-stellar-burger\\src\\components\\BurgerIngredients\\BurgerIngredients.jsx":"5","D:\\реакт\\react-stellar-burger\\src\\components\\IngredientsList\\IngredientsList.jsx":"6","D:\\реакт\\react-stellar-burger\\src\\components\\BurgerConstructor\\BurgerConstructor.jsx":"7","D:\\реакт\\react-stellar-burger\\src\\utils\\prop-types.js":"8","D:\\реакт\\react-stellar-burger\\src\\utils\\api\\api.js":"9","D:\\реакт\\react-stellar-burger\\src\\components\\OrderDetails\\OrderDetails.jsx":"10","D:\\реакт\\react-stellar-burger\\src\\components\\ModalOverlay\\ModalOverlay.jsx":"11","D:\\реакт\\react-stellar-burger\\src\\components\\Modal\\Modal.jsx":"12","D:\\реакт\\react-stellar-burger\\src\\components\\IngredientDetails\\IngredientDetails.jsx":"13","D:\\реакт\\react-stellar-burger\\src\\services\\ingredientsContext.jsx":"14"},{"size":532,"mtime":1694013010554,"results":"15","hashOfConfig":"16"},{"size":440,"mtime":1693989606566,"results":"17","hashOfConfig":"16"},{"size":1119,"mtime":1694593125343,"results":"18","hashOfConfig":"16"},{"size":1074,"mtime":1693989606557,"results":"19","hashOfConfig":"16"},{"size":4172,"mtime":1694344549360,"results":"20","hashOfConfig":"16"},{"size":1163,"mtime":1694344774881,"results":"21","hashOfConfig":"16"},{"size":4314,"mtime":1694595432712,"results":"22","hashOfConfig":"16"},{"size":991,"mtime":1693989606568,"results":"23","hashOfConfig":"16"},{"size":1112,"mtime":1694592901207,"results":"24","hashOfConfig":"16"},{"size":1148,"mtime":1694595018853,"results":"25","hashOfConfig":"16"},{"size":371,"mtime":1693989606561,"results":"26","hashOfConfig":"16"},{"size":1265,"mtime":1693989606559,"results":"27","hashOfConfig":"16"},{"size":1960,"mtime":1694595803317,"results":"28","hashOfConfig":"16"},{"size":149,"mtime":1694594596238,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1pf7lre",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"D:\\реакт\\react-stellar-burger\\src\\index.jsx",[],[],[],"D:\\реакт\\react-stellar-burger\\src\\reportWebVitals.ts",[],[],[],"D:\\реакт\\react-stellar-burger\\src\\components\\app\\app.jsx",[],[],"D:\\реакт\\react-stellar-burger\\src\\components\\AppHeader\\AppHeader.jsx",[],[],"D:\\реакт\\react-stellar-burger\\src\\components\\BurgerIngredients\\BurgerIngredients.jsx",["78"],[],"import ingredientsStyle from './BurgerIngredients.module.css'\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport React from 'react'\r\nimport IngredientsList from '../IngredientsList/IngredientsList'\r\nimport PropTypes, { func } from \"prop-types\";\r\nimport { ingredientPropType } from '../../utils/prop-types';\r\nimport Modal from '../Modal/Modal'\r\nimport IngredientDetails from '../IngredientDetails/IngredientDetails';\r\nimport { IngredientsContext } from '../../services/ingredientsContext';\r\nfunction BurgerIngredients() {\r\n    const {ingredientsBurger} = React.useContext(IngredientsContext)\r\n    const [openIngredient, setOpenIngredients] = React.useState(false)\r\n    const [infoIngredient, setInfoIngredient] = React.useState(null)\r\n    const [current, setCurrent] = React.useState('one')\r\n    const buns = React.useMemo(() => ingredientsBurger.filter((m) => m.type === \"bun\"), [ingredientsBurger]);\r\n    const sauces = React.useMemo(() => ingredientsBurger.filter((m) => m.type === \"sauce\"), [ingredientsBurger])\r\n    const fillings = React.useMemo(() => ingredientsBurger.filter((m) => m.type === \"main\"), [ingredientsBurger])\r\n    function openPopupIngrredient(ingredient) {\r\n        setOpenIngredients(true)\r\n        setInfoIngredient(ingredient)\r\n    }\r\n\r\n    function closePopupIngredient() {\r\n        setOpenIngredients(false)\r\n        setInfoIngredient(null)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className={ingredientsStyle.ingredientsContainer}>\r\n                <h2 className={`${ingredientsStyle.title} text text_type_main-large`}>Соберите бургер</h2>\r\n                <div className={ingredientsStyle.tab}>\r\n                    <Tab value=\"One\" active={current === 'one'} onClick={setCurrent}>\r\n                        Булки\r\n                    </Tab>\r\n                    <Tab value=\"Two\" active={current === 'two'} onClick={setCurrent}>\r\n                        Соусы\r\n                    </Tab>\r\n                    <Tab value=\"Three\" active={current === 'three'} onClick={setCurrent}>\r\n                        Начинки\r\n                    </Tab>\r\n                </div>\r\n                <div className={`${ingredientsStyle.container} custom-scroll`}>\r\n                    <h3 className={`${ingredientsStyle.subtitle} text text_type_main-default`}>Булки</h3>\r\n                    <ul className={ingredientsStyle.list}>\r\n                        {buns.map((ingredientsBurger) => (\r\n                            <li key={ingredientsBurger._id}>\r\n                                <IngredientsList item={ingredientsBurger} openIngredient={openPopupIngrredient} />\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <h3 className={`${ingredientsStyle.subtitle} text text_type_main-default`}>Соусы</h3>\r\n                    <ul className={ingredientsStyle.list}>\r\n                        {sauces.map((ingredientsBurger) => (\r\n                            <li key={ingredientsBurger._id}>\r\n                                <IngredientsList item={ingredientsBurger} openIngredient={openPopupIngrredient} />\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <h3 className={`${ingredientsStyle.subtitle} text text_type_main-default`}>Начинки</h3>\r\n                    <ul className={ingredientsStyle.list}>\r\n                        {fillings.map((ingredientsBurger) => (\r\n                            <li key={ingredientsBurger._id}>\r\n                                <IngredientsList item={ingredientsBurger} openIngredient={openPopupIngrredient} />\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </section>\r\n            {openIngredient && (<Modal title={\"Детали ингредиента\"} close={closePopupIngredient}>\r\n                <IngredientDetails options={infoIngredient} />\r\n            </Modal>)}\r\n        </>\r\n    )\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n    ingredientsBurger: PropTypes.arrayOf(ingredientPropType)\r\n}\r\nexport default BurgerIngredients","D:\\реакт\\react-stellar-burger\\src\\components\\IngredientsList\\IngredientsList.jsx",["79","80"],[],"import ingredientsStyle from '../BurgerIngredients/BurgerIngredients.module.css'\r\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport PropTypes, { func } from \"prop-types\";\r\nimport { ingredientsItemListPropType } from '../../utils/prop-types';\r\nimport { IngredientsContext } from '../../services/ingredientsContext';\r\nimport React from 'react'\r\nIngredientsList.propTypes = {\r\n    item: PropTypes.arrayOf(ingredientsItemListPropType),\r\n    openIngredient: PropTypes.func.isRequired\r\n}\r\n\r\nfunction IngredientsList({ item, openIngredient }) {\r\n    return (\r\n            <div className={ingredientsStyle.item} onClick={() => openIngredient(item)}>\r\n                <img src={`${item.image}`} alt={`${item.name}`} className={ingredientsStyle.image} />\r\n                <div><span className={`${ingredientsStyle.price} text text_type_digits-default`}>{item.price}</span><CurrencyIcon type=\"primary\" /></div>\r\n                <p className={`${ingredientsStyle.paragraph} text text_type_main-default`} >{item.name}</p>\r\n                <Counter size=\"small\" />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default IngredientsList","D:\\реакт\\react-stellar-burger\\src\\components\\BurgerConstructor\\BurgerConstructor.jsx",["81","82"],[],"import constructorStyles from './BurgerConstructor.module.css'\r\nimport { ConstructorElement, DragIcon, Button, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport React, { useMemo } from 'react'\r\nimport { ingredientPropType } from '../../utils/prop-types'\r\nimport PropTypes, { func } from \"prop-types\";\r\nimport OrderDetails from '../OrderDetails/OrderDetails';\r\nimport Modal from '../Modal/Modal';\r\nimport { IngredientsContext, OrderNumberContext } from '../../services/ingredientsContext';\r\nimport { postOrderDetailsNumber } from '../../utils/api/api';\r\nBurgerConstructor.propTypes = {\r\n    ingredientsBurger: PropTypes.arrayOf(ingredientPropType.isRequired)\r\n}\r\nfunction BurgerConstructor() {\r\n    const { ingredientsBurger } = React.useContext(IngredientsContext)\r\n    const buns = React.useMemo(() => ingredientsBurger.length > 0 && ingredientsBurger.find((m) => m.type === \"bun\"), [ingredientsBurger])\r\n    /*console.log(buns)*/\r\n    const saucesFillingsIngredients = React.useMemo(() => ingredientsBurger.filter((m) => m.type !== 'bun'), [ingredientsBurger])\r\n    /* console.log(saucesFillingsIngredients)*/\r\n    const [active, setActive] = React.useState(false);\r\n\r\n    const [orderNumber, setOrderNumber] = React.useState('')\r\n\r\n    const popupClose = () => {\r\n        setActive(false)\r\n    }\r\n\r\n    const popupOpen = () => {\r\n        setActive(true)\r\n        callOrderFetch()\r\n    }\r\n\r\n    const arrayOrderIngredients = React.useMemo(() => {\r\n        return ingredientsBurger.map((m) => m._id)\r\n    }, [ingredientsBurger])\r\n\r\n    console.log(arrayOrderIngredients)\r\n\r\n    function callOrderFetch() {\r\n        postOrderDetailsNumber(arrayOrderIngredients)\r\n            .then((result) => { setOrderNumber(result.order.number.toString()) })\r\n            .catch(err => console.log(err));\r\n    }\r\n    const totalPrice = React.useMemo(() => {\r\n        const priceIngredients = saucesFillingsIngredients.reduce((acc, item) => {\r\n            return acc + item.price;\r\n        }, 0);\r\n        return priceIngredients + buns.price * 2;\r\n    }, [saucesFillingsIngredients, buns]);\r\n    return (\r\n        <section className={`${constructorStyles.container}`}>\r\n            <div className={`${constructorStyles.content} pl-4 pr-4 pb-5 pt-5`}>\r\n                <div className={constructorStyles.component}><ConstructorElement\r\n                    type=\"top\"\r\n                    isLocked={true}\r\n                    text={`${buns.name} (верх)`}\r\n                    price={buns.price}\r\n                    thumbnail={buns.image}\r\n                /></div>\r\n                <ul className={`${constructorStyles.list}  custom-scroll`}>\r\n                    {ingredientsBurger.map((item) => {\r\n                        return item.type !== \"bun\" && (\r\n                            <li key={item._id} className={constructorStyles.item}>\r\n                                <DragIcon type=\"primary\" />\r\n                                <ConstructorElement\r\n                                    text={item.name}\r\n                                    price={item.price}\r\n                                    thumbnail={item.image}\r\n                                /></li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <div className={constructorStyles.component}><ConstructorElement\r\n                    type=\"bottom\"\r\n                    isLocked={true}\r\n                    text={`${buns.name} (низ)`}\r\n                    price={buns.price}\r\n                    thumbnail={buns.image}\r\n                />\r\n                </div>\r\n            </div>\r\n            <div className={constructorStyles.items}>\r\n                <span className={`${constructorStyles.price} text text_type_main-large mr-2`}>{totalPrice}<CurrencyIcon type=\"primary\" /></span>\r\n                <Button onClick={popupOpen} htmlType=\"button\" type=\"primary\" size=\"large\">\r\n                    Оформить заказ\r\n                </Button>\r\n            </div>\r\n            <OrderNumberContext.Provider value={{ orderNumber, setOrderNumber }}>\r\n                {active && (<Modal close={popupClose}>\r\n                    <OrderDetails />\r\n                </Modal>)}\r\n            </OrderNumberContext.Provider>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default BurgerConstructor","D:\\реакт\\react-stellar-burger\\src\\utils\\prop-types.js",[],[],"D:\\реакт\\react-stellar-burger\\src\\utils\\api\\api.js",[],[],"D:\\реакт\\react-stellar-burger\\src\\components\\OrderDetails\\OrderDetails.jsx",["83"],[],"import React from 'react'\r\nimport modalDetailsStyles from './OrderDetails.module.css'\r\nimport doneImage from '../../images/done.svg'\r\nimport { postOrderDetailsNumber } from '../../utils/api/api'\r\nimport { OrderNumberContext } from '../../services/ingredientsContext'\r\nfunction OrderDetails() {\r\n    const {orderNumber} = React.useContext(OrderNumberContext)\r\n    return (\r\n        <>\r\n            <ul className={modalDetailsStyles.container}>\r\n                <li className={`${modalDetailsStyles.number} text text_type_digits-large mt-4`}>{orderNumber}</li>\r\n                <li className={`${modalDetailsStyles.identifier} text text_type_main-default`}>идентификатор заказа</li>\r\n                <li className='mt-15'><img src={doneImage} alt=\"done\" /></li>\r\n                <li className=\"text text_type_main-small mt-15\">Ваш заказ начали готовить</li>\r\n                <li className={`${modalDetailsStyles.wait} text text_type_main-small mt-2`}>Дождитесь готовности на орбитальной станции</li>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default OrderDetails","D:\\реакт\\react-stellar-burger\\src\\components\\ModalOverlay\\ModalOverlay.jsx",[],[],"D:\\реакт\\react-stellar-burger\\src\\components\\Modal\\Modal.jsx",[],[],"D:\\реакт\\react-stellar-burger\\src\\components\\IngredientDetails\\IngredientDetails.jsx",[],[],"D:\\реакт\\react-stellar-burger\\src\\services\\ingredientsContext.jsx",[],[],{"ruleId":"84","severity":1,"message":"85","line":5,"column":21,"nodeType":"86","messageId":"87","endLine":5,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":3,"column":21,"nodeType":"86","messageId":"87","endLine":3,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":5,"column":10,"nodeType":"86","messageId":"87","endLine":5,"endColumn":28},{"ruleId":"84","severity":1,"message":"89","line":3,"column":17,"nodeType":"86","messageId":"87","endLine":3,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":5,"column":21,"nodeType":"86","messageId":"87","endLine":5,"endColumn":25},{"ruleId":"84","severity":1,"message":"90","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":32},"no-unused-vars","'func' is defined but never used.","Identifier","unusedVar","'IngredientsContext' is defined but never used.","'useMemo' is defined but never used.","'postOrderDetailsNumber' is defined but never used."]